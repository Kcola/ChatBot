{"version":3,"sources":["components/ChatWindow.js","components/ChatEntry.js","App.js","index.js"],"names":["ChatWindow","Chatlog","id","className","map","chat","name","key","src","dangerouslySetInnerHTML","__html","time","ChatEntry","newChat","useState","chatVal","newChatVal","handleSubmit","event","preventDefault","length","document","getElementById","value","onSubmit","autocomplete","onChange","target","placeholder","onClick","type","App","enterChat","SubmitFired","SetSubmitFired","showLoading","loading","Date","getHours","getMinutes","splice","useEffect","data","a","async","fetch","method","body","JSON","stringify","response","json","bot_response","BotApi","objDiv","scrollTop","scrollHeight","newName","ReactDOM","render"],"mappings":"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","file":"static/js/main.38d3c78b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./spinkit.css\";\nimport \"./spinkit.min.css\";\nfunction ChatWindow({ Chatlog }) {\n  return (\n    <div id=\"msgBody\" className=\"card-body msg_card_body\">\n      {Chatlog.map(chat => (\n        <div\n          className={\n            chat.name === \"Bot\" || chat.name === \"loading\"\n              ? \"d-flex justify-content-start mb-4\"\n              : \"d-flex justify-content-end mb-4\"\n          }\n          key={chat.key}\n        >\n          <div className=\"img_cont_msg\">\n            <img\n              src={\n                chat.name === \"Bot\" || chat.name === \"loading\"\n                  ? \"Bot.jpeg\"\n                  : \"logo512.png\"\n              }\n              className=\"rounded-circle user_img_msg\"\n            />\n          </div>\n          <div\n            className=\"msg_cotainer\"\n            dangerouslySetInnerHTML={{\n              __html:\n                `${chat.chat}` +\n                `<span class=\"msg_time\">${chat.time} , Today</span>`\n            }}\n          ></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ChatWindow;\n","import React, { useState } from \"react\";\nexport default function ChatEntry({ newChat }) {\n  const [chatVal, newChatVal] = useState([]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (chatVal.length > 0) newChat(\"Kola\", chatVal);\n    document.getElementById(\"chatInput\").value = \"\";\n    newChatVal(\"\");\n  };\n  return (\n    <div className=\"card-footer\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-group\">\n          <textarea\n            autocomplete=\"false\"\n            onChange={event => newChatVal(event.target.value)}\n            id=\"chatInput\"\n            className=\"form-control type_msg\"\n            placeholder=\"Type your message...\"\n          ></textarea>\n          <div\n            id=\"submitBtn\"\n            onClick={handleSubmit}\n            className=\"input-group-append\"\n          >\n            <span type=\"submit\" className=\"input-group-text send_btn\">\n              <i className=\"fas fa-location-arrow\"></i>\n            </span>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport ChatEntry from \"./components/ChatEntry\";\nfunction App() {\n  const [Chatlog, enterChat] = useState([]);\n  const [SubmitFired, SetSubmitFired] = useState([]);\n  const newChat = (newName, newChat) => {\n    SetSubmitFired(Chatlog.length);\n    enterChat([\n      ...Chatlog,\n      {\n        key: Chatlog.length,\n        name: newName,\n        chat: newChat,\n        time: new Date().getHours() + \":\" + new Date().getMinutes()\n      }\n    ]);\n  };\n  const showLoading = loading => {\n    if (loading === true) {\n      enterChat([\n        ...Chatlog,\n        {\n          key: Chatlog.length,\n          name: \"loading\",\n          chat:\n            '<div style=\"margin-bottom: -35px; margin-top: 6px;\" class=\"sk-flow\"><div class=\"sk-flow-dot\"></div><div class=\"sk-flow-dot\"></div><div class=\"sk-flow-dot\"></div></div>',\n          time: new Date().getHours() + \":\" + new Date().getMinutes()\n        }\n      ]);\n    } else {\n      Chatlog.splice(-1, 1);\n    }\n  };\n  useEffect(() => {\n    var data;\n    if (SubmitFired == 0) {\n      enterChat([\n        ...Chatlog,\n        {\n          key: Chatlog.length,\n          name: \"Bot\",\n          chat: \"Welcome to the chat room, I'm Bot\",\n          time: new Date().getHours() + \":\" + new Date().getMinutes()\n        }\n      ]);\n    } else {\n      async function BotApi() {\n        showLoading(true);\n\n        try {\n          const response = await fetch(\"http://18.223.152.188:5000/send\", {\n            method: \"POST\",\n            body: JSON.stringify({ chat: Chatlog[Chatlog.length - 1].chat })\n          });\n          data = await response.json();\n        } catch (error) {\n          data = { bot_response: \"Server is down try again later\" };\n        }\n\n        //This is where you I will call your API.\n        await enterChat([\n          ...Chatlog,\n          {\n            key: Chatlog.length,\n            name: \"Bot\",\n            chat: data.bot_response,\n            time: new Date().getHours() + \":\" + new Date().getMinutes()\n          }\n        ]);\n        showLoading(false);\n      }\n      BotApi();\n    }\n  }, [SubmitFired]);\n  useEffect(() => {\n    var objDiv = document.getElementById(\"msgBody\");\n    objDiv.scrollTop = objDiv.scrollHeight;\n  });\n  return (\n    <div className=\"card\">\n      <div className=\"card-header msg_head\">\n        <div className=\"d-flex bd-highlight\">\n          <div className=\"img_cont\">\n            <img src=\"Bot.jpeg\" className=\"rounded-circle user_img\" />\n            <span className=\"online_icon\"></span>\n          </div>\n\n          <div className=\"user_info\">\n            <span>Chat with Bot</span>\n          </div>\n        </div>\n      </div>\n      <ChatWindow Chatlog={Chatlog} />\n      <ChatEntry newChat={newChat} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}