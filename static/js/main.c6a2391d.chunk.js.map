{"version":3,"sources":["components/ChatWindow.js","components/ChatEntry.js","App.js","index.js"],"names":["ChatWindow","Chatlog","id","className","map","chat","name","key","src","dangerouslySetInnerHTML","__html","time","ChatEntry","newChat","useState","chatVal","newChatVal","handleSubmit","event","preventDefault","length","document","getElementById","value","onSubmit","autocomplete","onChange","target","placeholder","onClick","type","App","enterChat","SubmitFired","SetSubmitFired","showLoading","loading","Date","getHours","getMinutes","splice","useEffect","data","a","async","fetch","method","body","JSON","stringify","response","json","bot_response","BotApi","objDiv","scrollTop","scrollHeight","newName","ReactDOM","render"],"mappings":"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","file":"static/js/main.c6a2391d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./spinkit.css\";\r\nimport \"./spinkit.min.css\";\r\nfunction ChatWindow({ Chatlog }) {\r\n  return (\r\n    <div id=\"msgBody\" className=\"card-body msg_card_body\">\r\n      {Chatlog.map(chat => (\r\n        <div\r\n          className={\r\n            chat.name === \"Bot\" || chat.name === \"loading\"\r\n              ? \"d-flex justify-content-start mb-4\"\r\n              : \"d-flex justify-content-end mb-4\"\r\n          }\r\n          key={chat.key}\r\n        >\r\n          <div className=\"img_cont_msg\">\r\n            <img\r\n              src={\r\n                chat.name === \"Bot\" || chat.name === \"loading\"\r\n                  ? \"Bot.jpeg\"\r\n                  : \"logo512.png\"\r\n              }\r\n              className=\"rounded-circle user_img_msg\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"msg_cotainer\"\r\n            dangerouslySetInnerHTML={{\r\n              __html:\r\n                `${chat.chat}` +\r\n                `<span class=\"msg_time\">${chat.time} , Today</span>`\r\n            }}\r\n          ></div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import React, { useState } from \"react\";\r\nexport default function ChatEntry({ newChat }) {\r\n  const [chatVal, newChatVal] = useState([]);\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (chatVal.length > 0) newChat(\"Kola\", chatVal);\r\n    document.getElementById(\"chatInput\").value = \"\";\r\n    newChatVal(\"\");\r\n  };\r\n  return (\r\n    <div className=\"card-footer\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <textarea\r\n            autocomplete=\"false\"\r\n            onChange={event => newChatVal(event.target.value)}\r\n            id=\"chatInput\"\r\n            className=\"form-control type_msg\"\r\n            placeholder=\"Type your message...\"\r\n          ></textarea>\r\n          <div\r\n            id=\"submitBtn\"\r\n            onClick={handleSubmit}\r\n            className=\"input-group-append\"\r\n          >\r\n            <span type=\"submit\" className=\"input-group-text send_btn\">\r\n              <i className=\"fas fa-location-arrow\"></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChatWindow from \"./components/ChatWindow\";\r\nimport ChatEntry from \"./components/ChatEntry\";\r\nfunction App() {\r\n  const [Chatlog, enterChat] = useState([]);\r\n  const [SubmitFired, SetSubmitFired] = useState([]);\r\n  const newChat = (newName, newChat) => {\r\n    SetSubmitFired(Chatlog.length);\r\n    enterChat([\r\n      ...Chatlog,\r\n      {\r\n        key: Chatlog.length,\r\n        name: newName,\r\n        chat: newChat,\r\n        time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n      }\r\n    ]);\r\n  };\r\n  const showLoading = loading => {\r\n    if (loading === true) {\r\n      enterChat([\r\n        ...Chatlog,\r\n        {\r\n          key: Chatlog.length,\r\n          name: \"loading\",\r\n          chat:\r\n            '<div style=\"margin-bottom: -35px; margin-top: 6px;\" class=\"sk-flow\"><div class=\"sk-flow-dot\"></div><div class=\"sk-flow-dot\"></div><div class=\"sk-flow-dot\"></div></div>',\r\n          time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n        }\r\n      ]);\r\n    } else {\r\n      Chatlog.splice(-1, 1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    var data;\r\n    if (SubmitFired == 0) {\r\n      enterChat([\r\n        ...Chatlog,\r\n        {\r\n          key: Chatlog.length,\r\n          name: \"Bot\",\r\n          chat: \"Welcome to the chat room, I'm Bot\",\r\n          time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n        }\r\n      ]);\r\n    } else {\r\n      async function BotApi() {\r\n        showLoading(true);\r\n\r\n        try {\r\n          const response = await fetch(\"https://flaskchatbot.azurewebsites.net/send\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ chat: Chatlog[Chatlog.length - 1].chat })\r\n          });\r\n          data = await response.json();\r\n        } catch (error) {\r\n          data = { bot_response: \"Server is down try again later\" };\r\n        }\r\n\r\n        //This is where you I will call your API.\r\n        await enterChat([\r\n          ...Chatlog,\r\n          {\r\n            key: Chatlog.length,\r\n            name: \"Bot\",\r\n            chat: data.bot_response,\r\n            time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n          }\r\n        ]);\r\n        showLoading(false);\r\n      }\r\n      BotApi();\r\n    }\r\n  }, [SubmitFired]);\r\n  useEffect(() => {\r\n    var objDiv = document.getElementById(\"msgBody\");\r\n    objDiv.scrollTop = objDiv.scrollHeight;\r\n  });\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header msg_head\">\r\n        <div className=\"d-flex bd-highlight\">\r\n          <div className=\"img_cont\">\r\n            <img src=\"Bot.jpeg\" className=\"rounded-circle user_img\" />\r\n            <span className=\"online_icon\"></span>\r\n          </div>\r\n\r\n          <div className=\"user_info\">\r\n            <span>Chat with Bot</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ChatWindow Chatlog={Chatlog} />\r\n      <ChatEntry newChat={newChat} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}