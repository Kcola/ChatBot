{"version":3,"sources":["components/ChatWindow.js","components/ChatEntry.js","App.js","index.js"],"names":["ChatWindow","Chatlog","id","className","map","chat","name","key","src","time","ChatEntry","newChat","useState","chatVal","newChatVal","handleSubmit","event","preventDefault","length","document","getElementById","value","onSubmit","onChange","target","placeholder","onClick","type","App","enterChat","SubmitFired","SetSubmitFired","useEffect","Date","getHours","getMinutes","a","async","fetch","method","body","JSON","stringify","response","data","json","console","log","bot_response","objDiv","scrollTop","scrollHeight","BotApi","newName","ReactDOM","render"],"mappings":"kLAoBeA,MAnBf,YAAkC,IAAZC,EAAW,EAAXA,QACpB,OACE,yBAAKC,GAAG,UAAUC,UAAU,2BACzBF,EAAQG,KAAI,SAAAC,GAAI,OACf,yBACEF,UAAyB,QAAdE,EAAKC,KAAiB,oCAAsC,kCACvEC,IAAKF,EAAKE,KACV,yBAAKJ,UAAU,gBACb,yBAAKK,IAAmB,QAAdH,EAAKC,KAAiB,6DAA+D,cAC7FH,UAAU,iCAEd,yBAAKA,UAAU,gBAAf,UAAkCE,EAAKA,MAAO,0BAAMF,UAAU,YAAhB,UAA+BE,EAAKI,KAApC,oBCXzC,SAASC,EAAT,GAAiC,IAAZC,EAAW,EAAXA,QAAW,EACfC,mBAAS,IADM,mBACtCC,EADsC,KAC7BC,EAD6B,KAEvCC,EAAe,SAAAC,GACnBA,EAAMC,iBACFJ,EAAQK,OAAS,GACnBP,EAAQ,OAAQE,GAClBM,SAASC,eAAe,aAAaC,MAAQ,GAC7CP,EAAW,KAEb,OACE,yBAAKX,UAAU,eACb,0BAAMmB,SAAUP,GACd,yBAAKZ,UAAU,eACb,2BAAOoB,SAAU,SAAAP,GAAK,OAAIF,EAAWE,EAAMQ,OAAOH,QAAQnB,GAAG,YAAYC,UAAU,wBACjFsB,YAAY,yBACd,yBAAKC,QAASX,EAAcZ,UAAU,sBACpC,0BAAMwB,KAAK,SAASxB,UAAU,6BAA4B,uBAAGA,UAAU,+BCwEpEyB,MAtFf,WAAgB,IAAD,EACgBhB,mBAAS,IADzB,mBACNX,EADM,KACG4B,EADH,OAEyBjB,mBAAS,IAFlC,mBAENkB,EAFM,KAEOC,EAFP,KAgEb,OA9CAC,qBAAU,WAER,GAAmB,GAAfF,EACFD,EAAU,GAAD,mBACJ5B,GADI,CAEP,CACEM,IAAKN,EAAQiB,OACbZ,KAAM,MACND,KAAM,oCACNI,MACE,IAAIwB,MAAOC,WACX,KACA,IAAID,MAAOE,qBAId,EACH,uBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACyBE,MAAM,6BAA8B,CACzDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAErC,KAAMJ,EAAQA,EAAQiB,OAAS,GAAGb,UAH7D,OACQsC,EADR,OAKQC,EAAOD,EAASE,OACtBC,QAAQC,IAAIH,GAEZf,EAAU,GAAD,mBACJ5B,GADI,CAEP,CACEM,IAAKN,EAAQiB,OACbZ,KAAM,MACND,KAAMuC,EAAKI,aACXvC,MACE,IAAIwB,MAAOC,WACX,KACA,IAAID,MAAOE,kBAGbc,EAAS9B,SAASC,eAAe,YAC9B8B,UAAYD,EAAOE,aArB5B,qCAuBAC,GAGF,IAAIH,EAAS9B,SAASC,eAAe,WACrC6B,EAAOC,UAAYD,EAAOE,eACzB,CAACrB,IAEF,yBAAK3B,UAAU,QACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YACb,yBAAKK,IAAI,6DAA6DL,UAAU,4BAChF,0BAAMA,UAAU,iBAGlB,yBAAKA,UAAU,aACb,kDAMN,kBAAC,EAAD,CAAYF,QAASA,IACrB,kBAACS,EAAD,CAAWC,QA9EC,SAAC0C,EAAS1C,GACxBoB,EAAe9B,EAAQiB,QACvBW,EAAU,GAAD,mBACJ5B,GADI,CAEP,CACEM,IAAKN,EAAQiB,OACbZ,KAAM+C,EACNhD,KAAMM,EACNF,MACE,IAAIwB,MAAOC,WACX,KACA,IAAID,MAAOE,sBCbrBmB,IAASC,OAAO,kBAAC,EAAD,MAASpC,SAASC,eAAe,U","file":"static/js/main.5378fa2b.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction ChatWindow({ Chatlog }) {\r\n  return (\r\n    <div id=\"msgBody\" className=\"card-body msg_card_body\">\r\n      {Chatlog.map(chat => (\r\n        <div\r\n          className={chat.name === \"Bot\" ? \"d-flex justify-content-start mb-4\" : \"d-flex justify-content-end mb-4\"}\r\n          key={chat.key}>\r\n          <div className=\"img_cont_msg\">\r\n            <img src={chat.name === \"Bot\" ? \"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" : \"logo512.png\"}\r\n              className=\"rounded-circle user_img_msg\" />\r\n          </div>\r\n          <div className=\"msg_cotainer\">{`${chat.chat}`}<span className=\"msg_time\">{`${chat.time} , Today`}</span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import React, { useState } from \"react\";\r\nexport default function ChatEntry({ newChat }) {\r\n  const [chatVal, newChatVal] = useState([]);\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (chatVal.length > 0)\r\n      newChat(\"Kola\", chatVal)\r\n    document.getElementById(\"chatInput\").value = \"\";\r\n    newChatVal(\"\");\r\n  }\r\n  return (\r\n    <div className=\"card-footer\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <input onChange={event => newChatVal(event.target.value)} id=\"chatInput\" className=\"form-control type_msg\"\r\n            placeholder=\"Type your message...\"></input>\r\n          <div onClick={handleSubmit} className=\"input-group-append\">\r\n            <span type=\"submit\" className=\"input-group-text send_btn\"><i className=\"fas fa-location-arrow\"></i></span>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChatWindow from \"./components/ChatWindow\";\r\nimport ChatEntry from \"./components/ChatEntry\";\r\nfunction App() {\r\n  const [Chatlog, enterChat] = useState([]);\r\n  const [SubmitFired, SetSubmitFired] = useState([]);\r\n  const newChat = (newName, newChat) => {\r\n    SetSubmitFired(Chatlog.length);\r\n    enterChat([\r\n      ...Chatlog,\r\n      {\r\n        key: Chatlog.length,\r\n        name: newName,\r\n        chat: newChat,\r\n        time:\r\n          new Date().getHours() +\r\n          \":\" +\r\n          new Date().getMinutes()\r\n      }\r\n    ]);\r\n  };\r\n  useEffect(() => {\r\n\r\n    if (SubmitFired == 0) {\r\n      enterChat([\r\n        ...Chatlog,\r\n        {\r\n          key: Chatlog.length,\r\n          name: 'Bot',\r\n          chat: \"Welcome to the chat room, I'm Bot\",\r\n          time:\r\n            new Date().getHours() +\r\n            \":\" +\r\n            new Date().getMinutes()\r\n        }\r\n      ]);\r\n    }\r\n    else {\r\n      async function BotApi() {\r\n        const response = await fetch(\"http://127.0.0.1:5000/send\", {\r\n          method: 'POST',\r\n          body: JSON.stringify({ chat: Chatlog[Chatlog.length - 1].chat })\r\n        });\r\n        const data = response.json();\r\n        console.log(data);\r\n        //This is where you I will call your API.\r\n        enterChat([\r\n          ...Chatlog,\r\n          {\r\n            key: Chatlog.length,\r\n            name: 'Bot',\r\n            chat: data.bot_response,\r\n            time:\r\n              new Date().getHours() +\r\n              \":\" +\r\n              new Date().getMinutes()\r\n          }\r\n        ]);\r\n        var objDiv = document.getElementById(\"msgBody\");\r\n        objDiv.scrollTop = objDiv.scrollHeight\r\n      }\r\n      BotApi();\r\n    }\r\n\r\n    var objDiv = document.getElementById(\"msgBody\");\r\n    objDiv.scrollTop = objDiv.scrollHeight\r\n  }, [SubmitFired])\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header msg_head\">\r\n        <div className=\"d-flex bd-highlight\">\r\n          <div className=\"img_cont\">\r\n            <img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" className=\"rounded-circle user_img\" />\r\n            <span className=\"online_icon\"></span>\r\n          </div>\r\n\r\n          <div className=\"user_info\">\r\n            <span>Chat with Bot</span>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <ChatWindow Chatlog={Chatlog} />\r\n      <ChatEntry newChat={newChat} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}