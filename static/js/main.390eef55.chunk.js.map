{"version":3,"sources":["components/ChatWindow.js","components/ChatEntry.js","App.js","index.js"],"names":["ChatWindow","Chatlog","id","className","map","chat","name","key","src","dangerouslySetInnerHTML","__html","time","ChatEntry","newChat","useState","chatVal","newChatVal","handleSubmit","event","preventDefault","length","document","getElementById","value","onSubmit","onChange","target","placeholder","onClick","type","App","enterChat","SubmitFired","SetSubmitFired","showLoading","loading","Date","getHours","getMinutes","splice","useEffect","a","async","fetch","method","body","JSON","stringify","response","json","data","bot_response","objDiv","scrollTop","scrollHeight","BotApi","newName","ReactDOM","render"],"mappings":"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","file":"static/js/main.390eef55.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./spinkit.css\";\nimport \"./spinkit.min.css\";\nfunction ChatWindow({ Chatlog }) {\n  return (\n    <div id=\"msgBody\" className=\"card-body msg_card_body\">\n      {Chatlog.map(chat => (\n        <div\n          className={\n            chat.name === \"Bot\" || chat.name === \"loading\"\n              ? \"d-flex justify-content-start mb-4\"\n              : \"d-flex justify-content-end mb-4\"\n          }\n          key={chat.key}\n        >\n          <div className=\"img_cont_msg\">\n            <img\n              src={\n                chat.name === \"Bot\" || chat.name === \"loading\"\n                  ? \"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\"\n                  : \"logo512.png\"\n              }\n              className=\"rounded-circle user_img_msg\"\n            />\n          </div>\n          <div\n            className=\"msg_cotainer\"\n            dangerouslySetInnerHTML={{\n              __html:\n                `${chat.chat}` +\n                `<span class=\"msg_time\">${chat.time} , Today</span>`\n            }}\n          ></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ChatWindow;\n","import React, { useState } from \"react\";\nexport default function ChatEntry({ newChat }) {\n  const [chatVal, newChatVal] = useState([]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (chatVal.length > 0)\n      newChat(\"Kola\", chatVal)\n    document.getElementById(\"chatInput\").value = \"\";\n    newChatVal(\"\");\n  }\n  return (\n    <div className=\"card-footer\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-group\">\n          <input onChange={event => newChatVal(event.target.value)} id=\"chatInput\" className=\"form-control type_msg\"\n            placeholder=\"Type your message...\"></input>\n          <div onClick={handleSubmit} className=\"input-group-append\">\n            <span type=\"submit\" className=\"input-group-text send_btn\"><i className=\"fas fa-location-arrow\"></i></span>\n          </div>\n        </div>\n      </form>\n\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport ChatEntry from \"./components/ChatEntry\";\nfunction App() {\n  const [Chatlog, enterChat] = useState([]);\n  const [SubmitFired, SetSubmitFired] = useState([]);\n  const newChat = (newName, newChat) => {\n    SetSubmitFired(Chatlog.length);\n    enterChat([\n      ...Chatlog,\n      {\n        key: Chatlog.length,\n        name: newName,\n        chat: newChat,\n        time: new Date().getHours() + \":\" + new Date().getMinutes()\n      }\n    ]);\n  };\n  const showLoading = loading => {\n    if (loading === true) {\n      enterChat([\n        ...Chatlog,\n        {\n          key: Chatlog.length,\n          name: \"loading\",\n          chat:\n            '<div style=\"margin-bottom: -35px; margin-top: 6px;\" class=\"sk-flow\"><div class=\"sk-flow-dot\"></div><div class=\"sk-flow-dot\"></div><div class=\"sk-flow-dot\"></div></div>',\n          time: new Date().getHours() + \":\" + new Date().getMinutes()\n        }\n      ]);\n    } else {\n      Chatlog.splice(-1, 1);\n    }\n  };\n  useEffect(() => {\n    if (SubmitFired == 0) {\n      enterChat([\n        ...Chatlog,\n        {\n          key: Chatlog.length,\n          name: \"Bot\",\n          chat: \"Welcome to the chat room, I'm Bot\",\n          time: new Date().getHours() + \":\" + new Date().getMinutes()\n        }\n      ]);\n    } else {\n      async function BotApi() {\n        showLoading(true);\n        const response = await fetch(\"http://52.15.39.6:5000/send\", {\n          method: \"POST\",\n          body: JSON.stringify({ chat: Chatlog[Chatlog.length - 1].chat })\n        });\n        const data = await response.json();\n        //This is where you I will call your API.\n        enterChat([\n          ...Chatlog,\n          {\n            key: Chatlog.length,\n            name: \"Bot\",\n            chat: data.bot_response,\n            time: new Date().getHours() + \":\" + new Date().getMinutes()\n          }\n        ]);\n        var objDiv = document.getElementById(\"msgBody\");\n        objDiv.scrollTop = objDiv.scrollHeight;\n        showLoading(false);\n      }\n      BotApi();\n    }\n\n    var objDiv = document.getElementById(\"msgBody\");\n    if (objDiv != null) objDiv.scrollTop = objDiv.scrollHeight;\n  }, [SubmitFired]);\n  return (\n    <div className=\"card\">\n      <div className=\"card-header msg_head\">\n        <div className=\"d-flex bd-highlight\">\n          <div className=\"img_cont\">\n            <img\n              src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\"\n              className=\"rounded-circle user_img\"\n            />\n            <span className=\"online_icon\"></span>\n          </div>\n\n          <div className=\"user_info\">\n            <span>Chat with Bot</span>\n          </div>\n        </div>\n      </div>\n      <ChatWindow Chatlog={Chatlog} />\n      <ChatEntry newChat={newChat} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}