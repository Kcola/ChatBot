{"version":3,"sources":["components/ChatWindow.js","components/ChatEntry.js","App.js","index.js"],"names":["ChatWindow","Chatlog","console","log","class","map","chat","className","name","key","src","time","ChatEntry","newChat","useState","chatVal","newChatVal","handleSubmit","event","preventDefault","document","getElementById","value","onSubmit","onChange","target","id","placeholder","onClick","type","App","enterChat","SubmitFired","SetSubmitFired","useEffect","length","Date","getHours","getMinutes","setTimeout","newName","ReactDOM","render"],"mappings":"kKAqBeA,MApBf,YAAkC,IAAZC,EAAW,EAAXA,QAEpB,OADAC,QAAQC,WAAWF,GAEjB,yBAAKG,MAAM,2BACRH,EAAQI,KAAI,SAAAC,GAAI,OACf,yBACEC,UAAyB,QAAdD,EAAKE,KAAiB,oCAAsC,kCACvEC,IAAKH,EAAKG,KACV,yBAAKF,UAAU,gBACb,yBAAKG,IAAmB,QAAdJ,EAAKE,KAAiB,6DAA+D,cAC7FD,UAAU,iCAEd,yBAAKA,UAAU,gBAAf,UAAkCD,EAAKA,MAAO,0BAAMC,UAAU,YAAhB,UAA+BD,EAAKK,KAApC,oBCZzC,SAASC,EAAT,GAAiC,IAAZC,EAAW,EAAXA,QAAW,EACfC,mBAAS,IADM,mBACtCC,EADsC,KAC7BC,EAD6B,KAEvCC,EAAe,SAAAC,GACnBA,EAAMC,iBACNN,EAAQ,OAAQE,GAChBK,SAASC,eAAe,aAAaC,MAAQ,IAE/C,OACE,yBAAKlB,MAAM,eACT,0BAAMmB,SAAUN,GAChB,yBAAKb,MAAM,eACP,2BAAOoB,SAAU,SAAAN,GAAK,OAAIF,EAAWE,EAAMO,OAAOH,QAAQI,GAAI,YAAYtB,MAAM,wBAC5EuB,YAAY,yBAChB,yBAAKC,QAASX,EAAcb,MAAM,sBAC9B,0BAAMyB,KAAK,SAASzB,MAAM,6BAA4B,uBAAGA,MAAM,+BC4D9D0B,MAxEf,WAAgB,IAAD,EACgBhB,mBAAS,IADzB,mBACNb,EADM,KACG8B,EADH,OAEyBjB,mBAAS,IAFlC,mBAENkB,EAFM,KAEOC,EAFP,KAkDb,OAhCCC,qBAAU,WACQ,GAAbF,EACFD,EAAU,GAAD,mBACJ9B,GADI,CAEP,CACEQ,IAAKR,EAAQkC,OACb3B,KAAM,MACNF,KAAM,oCACNK,MACE,IAAIyB,MAAOC,WACX,KACA,IAAID,MAAOE,iBAMjBC,YAAW,WAAKR,EAAU,GAAD,mBACpB9B,GADoB,CAEvB,CACEQ,IAAKR,EAAQkC,OACb3B,KAAM,MACNF,KAAM,eACNK,MACE,IAAIyB,MAAOC,WACX,KACA,IAAID,MAAOE,mBAEX,OAGP,CAACN,IAEF,yBAAK5B,MAAM,QACT,yBAAKA,MAAM,wBACX,yBAAKA,MAAM,uBACT,yBAAKA,MAAM,YACT,yBAAKM,IAAI,6DAA6DN,MAAM,4BAC5E,0BAAMA,MAAM,iBAGd,yBAAKA,MAAM,aACT,kDAMJ,kBAAC,EAAD,CAAYH,QAASA,IACrB,kBAACW,EAAD,CAAWC,QAhEC,SAAC2B,EAAS3B,GACxBoB,EAAehC,EAAQkC,QACvBJ,EAAU,GAAD,mBACJ9B,GADI,CAEP,CACEQ,IAAKR,EAAQkC,OACb3B,KAAMgC,EACNlC,KAAMO,EACNF,MACE,IAAIyB,MAAOC,WACX,KACA,IAAID,MAAOE,sBCbrBG,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASC,eAAe,U","file":"static/js/main.037d3cdc.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction ChatWindow({ Chatlog }) {\r\n  console.log(typeof Chatlog);\r\n  return (\r\n    <div class=\"card-body msg_card_body\">\r\n      {Chatlog.map(chat => (\r\n        <div\r\n          className={chat.name === \"Bot\" ? \"d-flex justify-content-start mb-4\" : \"d-flex justify-content-end mb-4\"}\r\n          key={chat.key}>\r\n          <div className=\"img_cont_msg\">\r\n            <img src={chat.name === \"Bot\" ? \"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" : \"logo512.png\"}\r\n              className=\"rounded-circle user_img_msg\" />\r\n          </div>\r\n          <div className=\"msg_cotainer\">{`${chat.chat}`}<span className=\"msg_time\">{`${chat.time} , Today`}</span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import React, { useState } from \"react\";\r\nexport default function ChatEntry({ newChat }) {\r\n  const [chatVal, newChatVal] = useState([]);\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    newChat(\"Kola\", chatVal)\r\n    document.getElementById(\"chatInput\").value = \"\";\r\n  }\r\n  return (\r\n    <div class=\"card-footer\">\r\n      <form onSubmit={handleSubmit}>\r\n      <div class=\"input-group\">\r\n          <input onChange={event => newChatVal(event.target.value)} id =\"chatInput\" class=\"form-control type_msg\"\r\n              placeholder=\"Type your message...\"></input>\r\n          <div onClick={handleSubmit} class=\"input-group-append\">\r\n              <span type=\"submit\" class=\"input-group-text send_btn\"><i class=\"fas fa-location-arrow\"></i></span>\r\n          </div>\r\n      </div>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChatWindow from \"./components/ChatWindow\";\r\nimport ChatEntry from \"./components/ChatEntry\";\r\nfunction App() {\r\n  const [Chatlog, enterChat] = useState([]);\r\n  const [SubmitFired, SetSubmitFired] = useState([]);\r\n  const newChat = (newName, newChat) => {\r\n    SetSubmitFired(Chatlog.length);\r\n    enterChat([\r\n      ...Chatlog,\r\n      {\r\n        key: Chatlog.length,\r\n        name: newName,\r\n        chat: newChat,\r\n        time:\r\n          new Date().getHours() +\r\n          \":\" +\r\n          new Date().getMinutes()\r\n      }\r\n    ]);\r\n  };\r\n   useEffect(() => {\r\n     if(SubmitFired==0){\r\n      enterChat([\r\n        ...Chatlog,\r\n        {\r\n          key: Chatlog.length,\r\n          name: 'Bot',\r\n          chat: \"Welcome to the chat room, I'm Bot\",\r\n          time:\r\n            new Date().getHours() +\r\n            \":\" +\r\n            new Date().getMinutes()\r\n        }\r\n      ]);\r\n     }\r\n     else{\r\n       //This is where you I will call your API.\r\n      setTimeout(()=>{enterChat([\r\n        ...Chatlog,\r\n        {\r\n          key: Chatlog.length,\r\n          name: 'Bot',\r\n          chat: \"Bot response\",\r\n          time:\r\n            new Date().getHours() +\r\n            \":\" +\r\n            new Date().getMinutes()\r\n        }\r\n      ]);}, 2000) \r\n     }\r\n    \r\n  }, [SubmitFired]) \r\n  return (\r\n    <div class=\"card\">\r\n      <div class=\"card-header msg_head\">\r\n      <div class=\"d-flex bd-highlight\">\r\n        <div class=\"img_cont\">\r\n          <img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" class=\"rounded-circle user_img\" />\r\n          <span class=\"online_icon\"></span>\r\n        </div>\r\n\r\n        <div class=\"user_info\">\r\n          <span>Chat with Bot</span>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n      <ChatWindow Chatlog={Chatlog} />\r\n      <ChatEntry newChat={newChat} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}