{"version":3,"sources":["components/ChatWindow.js","components/ChatEntry.js","App.js","index.js"],"names":["ChatWindow","Chatlog","id","className","map","chat","name","key","src","dangerouslySetInnerHTML","__html","time","ChatEntry","newChat","useState","chatVal","newChatVal","handleSubmit","event","preventDefault","length","document","getElementById","value","onSubmit","onChange","target","placeholder","onClick","type","App","enterChat","SubmitFired","SetSubmitFired","showLoading","loading","Date","getHours","getMinutes","splice","useEffect","a","async","fetch","method","body","JSON","stringify","response","json","data","bot_response","BotApi","objDiv","scrollTop","scrollHeight","newName","ReactDOM","render"],"mappings":"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","file":"static/js/main.bd435da2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./spinkit.css\";\r\nimport \"./spinkit.min.css\";\r\nfunction ChatWindow({ Chatlog }) {\r\n  return (\r\n    <div id=\"msgBody\" className=\"card-body msg_card_body\">\r\n      {Chatlog.map(chat => (\r\n        <div\r\n          className={\r\n            chat.name === \"Bot\" || chat.name === \"loading\"\r\n              ? \"d-flex justify-content-start mb-4\"\r\n              : \"d-flex justify-content-end mb-4\"\r\n          }\r\n          key={chat.key}\r\n        >\r\n          <div className=\"img_cont_msg\">\r\n            <img\r\n              src={\r\n                chat.name === \"Bot\" || chat.name === \"loading\"\r\n                  ? \"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\"\r\n                  : \"logo512.png\"\r\n              }\r\n              className=\"rounded-circle user_img_msg\"\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"msg_cotainer\"\r\n            dangerouslySetInnerHTML={{\r\n              __html:\r\n                `${chat.chat}` +\r\n                `<span class=\"msg_time\">${chat.time} , Today</span>`\r\n            }}\r\n          ></div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import React, { useState } from \"react\";\r\nexport default function ChatEntry({ newChat }) {\r\n  const [chatVal, newChatVal] = useState([]);\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (chatVal.length > 0)\r\n      newChat(\"Kola\", chatVal)\r\n    document.getElementById(\"chatInput\").value = \"\";\r\n    newChatVal(\"\");\r\n  }\r\n  return (\r\n    <div className=\"card-footer\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <input onChange={event => newChatVal(event.target.value)} id=\"chatInput\" className=\"form-control type_msg\"\r\n            placeholder=\"Type your message...\"></input>\r\n          <div onClick={handleSubmit} className=\"input-group-append\">\r\n            <span type=\"submit\" className=\"input-group-text send_btn\"><i className=\"fas fa-location-arrow\"></i></span>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChatWindow from \"./components/ChatWindow\";\r\nimport ChatEntry from \"./components/ChatEntry\";\r\nfunction App() {\r\n  const [Chatlog, enterChat] = useState([]);\r\n  const [SubmitFired, SetSubmitFired] = useState([]);\r\n  const newChat = (newName, newChat) => {\r\n    SetSubmitFired(Chatlog.length);\r\n    enterChat([\r\n      ...Chatlog,\r\n      {\r\n        key: Chatlog.length,\r\n        name: newName,\r\n        chat: newChat,\r\n        time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n      }\r\n    ]);\r\n  };\r\n  const showLoading = loading => {\r\n    if (loading === true) {\r\n      enterChat([\r\n        ...Chatlog,\r\n        {\r\n          key: Chatlog.length,\r\n          name: \"loading\",\r\n          chat:\r\n            '<div style=\"margin-bottom: -35px; margin-top: 6px;\" class=\"sk-flow\"><div class=\"sk-flow-dot\"></div><div class=\"sk-flow-dot\"></div><div class=\"sk-flow-dot\"></div></div>',\r\n          time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n        }\r\n      ]);\r\n    } else {\r\n      Chatlog.splice(-1, 1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (SubmitFired == 0) {\r\n      enterChat([\r\n        ...Chatlog,\r\n        {\r\n          key: Chatlog.length,\r\n          name: \"Bot\",\r\n          chat: \"Welcome to the chat room, I'm Bot\",\r\n          time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n        }\r\n      ]);\r\n    } else {\r\n      async function BotApi() {\r\n        showLoading(true);\r\n        const response = await fetch(\"http://18.222.211.255:5000/send\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ chat: Chatlog[Chatlog.length - 1].chat })\r\n        });\r\n        const data = await response.json();\r\n        //This is where you I will call your API.\r\n        await enterChat([\r\n          ...Chatlog,\r\n          {\r\n            key: Chatlog.length,\r\n            name: \"Bot\",\r\n            chat: data.bot_response,\r\n            time: new Date().getHours() + \":\" + new Date().getMinutes()\r\n          }\r\n        ]);\r\n        showLoading(false);\r\n      }\r\n      BotApi();\r\n    }\r\n\r\n  }, [SubmitFired]);\r\n  useEffect(() => {\r\n    var objDiv = document.getElementById(\"msgBody\");\r\n    objDiv.scrollTop = objDiv.scrollHeight;\r\n  })\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header msg_head\">\r\n        <div className=\"d-flex bd-highlight\">\r\n          <div className=\"img_cont\">\r\n            <img\r\n              src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\"\r\n              className=\"rounded-circle user_img\"\r\n            />\r\n            <span className=\"online_icon\"></span>\r\n          </div>\r\n\r\n          <div className=\"user_info\">\r\n            <span>Chat with Bot</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ChatWindow Chatlog={Chatlog} />\r\n      <ChatEntry newChat={newChat} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}