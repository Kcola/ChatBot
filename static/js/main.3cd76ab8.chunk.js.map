{"version":3,"sources":["components/ChatWindow.js","components/ChatEntry.js","App.js","index.js"],"names":["ChatWindow","Chatlog","id","className","map","chat","name","key","src","time","ChatEntry","newChat","useState","chatVal","newChatVal","handleSubmit","event","preventDefault","length","document","getElementById","value","onSubmit","onChange","target","placeholder","onClick","type","App","enterChat","SubmitFired","SetSubmitFired","useEffect","Date","getHours","getMinutes","a","async","fetch","method","body","JSON","stringify","response","json","data","bot_response","objDiv","scrollTop","scrollHeight","BotApi","newName","ReactDOM","render"],"mappings":"kLAoBeA,MAnBf,YAAkC,IAAZC,EAAW,EAAXA,QACpB,OACE,yBAAKC,GAAG,UAAUC,UAAU,2BACzBF,EAAQG,KAAI,SAAAC,GAAI,OACf,yBACEF,UAAyB,QAAdE,EAAKC,KAAiB,oCAAsC,kCACvEC,IAAKF,EAAKE,KACV,yBAAKJ,UAAU,gBACb,yBAAKK,IAAmB,QAAdH,EAAKC,KAAiB,6DAA+D,cAC7FH,UAAU,iCAEd,yBAAKA,UAAU,gBAAf,UAAkCE,EAAKA,MAAO,0BAAMF,UAAU,YAAhB,UAA+BE,EAAKI,KAApC,oBCXzC,SAASC,EAAT,GAAiC,IAAZC,EAAW,EAAXA,QAAW,EACfC,mBAAS,IADM,mBACtCC,EADsC,KAC7BC,EAD6B,KAEvCC,EAAe,SAAAC,GACnBA,EAAMC,iBACFJ,EAAQK,OAAS,GACnBP,EAAQ,OAAQE,GAClBM,SAASC,eAAe,aAAaC,MAAQ,GAC7CP,EAAW,KAEb,OACE,yBAAKX,UAAU,eACb,0BAAMmB,SAAUP,GACd,yBAAKZ,UAAU,eACb,2BAAOoB,SAAU,SAAAP,GAAK,OAAIF,EAAWE,EAAMQ,OAAOH,QAAQnB,GAAG,YAAYC,UAAU,wBACjFsB,YAAY,yBACd,yBAAKC,QAASX,EAAcZ,UAAU,sBACpC,0BAAMwB,KAAK,SAASxB,UAAU,6BAA4B,uBAAGA,UAAU,+BCuEpEyB,MArFf,WAAgB,IAAD,EACgBhB,mBAAS,IADzB,mBACNX,EADM,KACG4B,EADH,OAEyBjB,mBAAS,IAFlC,mBAENkB,EAFM,KAEOC,EAFP,KA+Db,OA7CAC,qBAAU,WAER,GAAmB,GAAfF,EACFD,EAAU,GAAD,mBACJ5B,GADI,CAEP,CACEM,IAAKN,EAAQiB,OACbZ,KAAM,MACND,KAAM,oCACNI,MACE,IAAIwB,MAAOC,WACX,KACA,IAAID,MAAOE,qBAId,EACH,uBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACyBE,MAAM,8BAA+B,CAC1DC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAErC,KAAMJ,EAAQA,EAAQiB,OAAS,GAAGb,UAH7D,cACQsC,EADR,kBAAAP,EAAA,MAKqBO,EAASC,QAL9B,OAKQC,EALR,OAOEhB,EAAU,GAAD,mBACJ5B,GADI,CAEP,CACEM,IAAKN,EAAQiB,OACbZ,KAAM,MACND,KAAMwC,EAAKC,aACXrC,MACE,IAAIwB,MAAOC,WACX,KACA,IAAID,MAAOE,kBAGbY,EAAS5B,SAASC,eAAe,YAC9B4B,UAAYD,EAAOE,aApB5B,qCAsBAC,GAGF,IAAIH,EAAS5B,SAASC,eAAe,WACrC2B,EAAOC,UAAYD,EAAOE,eACzB,CAACnB,IAEF,yBAAK3B,UAAU,QACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YACb,yBAAKK,IAAI,6DAA6DL,UAAU,4BAChF,0BAAMA,UAAU,iBAGlB,yBAAKA,UAAU,aACb,kDAMN,kBAAC,EAAD,CAAYF,QAASA,IACrB,kBAACS,EAAD,CAAWC,QA7EC,SAACwC,EAASxC,GACxBoB,EAAe9B,EAAQiB,QACvBW,EAAU,GAAD,mBACJ5B,GADI,CAEP,CACEM,IAAKN,EAAQiB,OACbZ,KAAM6C,EACN9C,KAAMM,EACNF,MACE,IAAIwB,MAAOC,WACX,KACA,IAAID,MAAOE,sBCbrBiB,IAASC,OAAO,kBAAC,EAAD,MAASlC,SAASC,eAAe,U","file":"static/js/main.3cd76ab8.chunk.js","sourcesContent":["import React from \"react\";\nfunction ChatWindow({ Chatlog }) {\n  return (\n    <div id=\"msgBody\" className=\"card-body msg_card_body\">\n      {Chatlog.map(chat => (\n        <div\n          className={chat.name === \"Bot\" ? \"d-flex justify-content-start mb-4\" : \"d-flex justify-content-end mb-4\"}\n          key={chat.key}>\n          <div className=\"img_cont_msg\">\n            <img src={chat.name === \"Bot\" ? \"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" : \"logo512.png\"}\n              className=\"rounded-circle user_img_msg\" />\n          </div>\n          <div className=\"msg_cotainer\">{`${chat.chat}`}<span className=\"msg_time\">{`${chat.time} , Today`}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ChatWindow;\n","import React, { useState } from \"react\";\nexport default function ChatEntry({ newChat }) {\n  const [chatVal, newChatVal] = useState([]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (chatVal.length > 0)\n      newChat(\"Kola\", chatVal)\n    document.getElementById(\"chatInput\").value = \"\";\n    newChatVal(\"\");\n  }\n  return (\n    <div className=\"card-footer\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-group\">\n          <input onChange={event => newChatVal(event.target.value)} id=\"chatInput\" className=\"form-control type_msg\"\n            placeholder=\"Type your message...\"></input>\n          <div onClick={handleSubmit} className=\"input-group-append\">\n            <span type=\"submit\" className=\"input-group-text send_btn\"><i className=\"fas fa-location-arrow\"></i></span>\n          </div>\n        </div>\n      </form>\n\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport ChatEntry from \"./components/ChatEntry\";\nfunction App() {\n  const [Chatlog, enterChat] = useState([]);\n  const [SubmitFired, SetSubmitFired] = useState([]);\n  const newChat = (newName, newChat) => {\n    SetSubmitFired(Chatlog.length);\n    enterChat([\n      ...Chatlog,\n      {\n        key: Chatlog.length,\n        name: newName,\n        chat: newChat,\n        time:\n          new Date().getHours() +\n          \":\" +\n          new Date().getMinutes()\n      }\n    ]);\n  };\n  useEffect(() => {\n\n    if (SubmitFired == 0) {\n      enterChat([\n        ...Chatlog,\n        {\n          key: Chatlog.length,\n          name: 'Bot',\n          chat: \"Welcome to the chat room, I'm Bot\",\n          time:\n            new Date().getHours() +\n            \":\" +\n            new Date().getMinutes()\n        }\n      ]);\n    }\n    else {\n      async function BotApi() {\n        const response = await fetch(\"http://52.15.39.6:5000/send\", {\n          method: 'POST',\n          body: JSON.stringify({ chat: Chatlog[Chatlog.length - 1].chat })\n        });\n        const data = await response.json();\n        //This is where you I will call your API.\n        enterChat([\n          ...Chatlog,\n          {\n            key: Chatlog.length,\n            name: 'Bot',\n            chat: data.bot_response,\n            time:\n              new Date().getHours() +\n              \":\" +\n              new Date().getMinutes()\n          }\n        ]);\n        var objDiv = document.getElementById(\"msgBody\");\n        objDiv.scrollTop = objDiv.scrollHeight\n      }\n      BotApi();\n    }\n\n    var objDiv = document.getElementById(\"msgBody\");\n    objDiv.scrollTop = objDiv.scrollHeight\n  }, [SubmitFired])\n  return (\n    <div className=\"card\">\n      <div className=\"card-header msg_head\">\n        <div className=\"d-flex bd-highlight\">\n          <div className=\"img_cont\">\n            <img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" className=\"rounded-circle user_img\" />\n            <span className=\"online_icon\"></span>\n          </div>\n\n          <div className=\"user_info\">\n            <span>Chat with Bot</span>\n          </div>\n\n\n        </div>\n      </div>\n      <ChatWindow Chatlog={Chatlog} />\n      <ChatEntry newChat={newChat} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}